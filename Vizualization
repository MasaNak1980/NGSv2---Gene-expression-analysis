Log fold change shrinkage for visualization and ranking

#apeglmをインストール


if (!requireNamespace("BiocManager", quietly = TRUE))
    install.packages("BiocManager")

BiocManager::install("apeglm")

resultsNames(dds_wt)
resLFC <- lfcShrink(dds_wt, coef="condition_Type_1_Diabetes_vs_Healthy_Control", type="apeglm")
resLFC

#作図
plotMA(resLFC, ylim=c(-2,2))

-------------------------------------------
Heatmap
library("pheatmap")
ntd <- normTransform(dds)
select <- order(rowMeans(counts(dds_wt,normalized=TRUE)),
                decreasing=TRUE)[1:20]
df <- as.data.frame(colData(dds_wt)[,c("condition")])
df
# rownames(annotation_c) <- colnames(ntd)
pheatmap(assay(ntd)[select,], cluster_rows=FALSE, show_rownames=FALSE,
         cluster_cols=FALSE, annotation_col=df)
エラーがでる         
Error in check.length("fill") : 
  'gpar' element 'fill' must not be length 0
色々調べると、ntd と　dfの名前が一致していないことが問題らしい。　

rownames(df) <- colnames(ntd)　これを加えると上手くいきました。　


select <- order(rowMeans(counts(dds_wt,normalized=TRUE)),
                decreasing=TRUE)[1:40]
df <- as.data.frame(colData(dds_wt)[,c("condition")])
df

rownames(df) <- colnames(ntd)

pheatmap(assay(ntd)[select,], cluster_rows=FALSE, show_rownames=FALSE,
         cluster_cols=FALSE, annotation_col=df)
         
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー         

#Heatmap of the sample-to-sample distances
sampleDists <- dist(t(assay(vsd)))

library("RColorBrewer")
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- paste(vsd$condition, vsd$type, sep="-")
colnames(sampleDistMatrix) <- NULL
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
         clustering_distance_rows=sampleDists,
         clustering_distance_cols=sampleDists,
         col=colors)
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
# Principal component plot of the samples
plotPCA(vsd, intgroup=c("condition")) #条件を増やすなら、,"~~~",というふうに加えていく 

pcaData <- plotPCA(vsd, intgroup=c("condition"), returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=condition)) +
  geom_point(size=3) +
  xlab(paste0("PC1: ",percentVar[1],"% variance")) +
  ylab(paste0("PC2: ",percentVar[2],"% variance")) + 
  coord_fixed()
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
Gene name を使ったheatmap 

heatmap oredered by P value (https://www.biostars.org/p/179911/)
# We can order our results table by the smallest p value:
res_wtOrdered <- res_wt_naomit[order(res_wt_naomit$pvalue),]
summary(res_wtOrdered)

topgenes <- head(rownames(res_wtOrdered),20)
mat <- assay(rld)[topgenes,] #rld
mat <- mat - rowMeans(mat)
mat

df <- as.data.frame(colData(dds)[,c("condition")])
df
# Change the name of column 
colnames(df) <- 'condition'

#To change the name of genes
head(res_wt_naomit_annot_sort, 20) #20個目のp値を調べた
res_wt_naomit_annot_sort_20 <- res_wt_naomit_annot_sort %>% filter(padj <= 2.938955e-03)　#20個だけ厳選 Pvalue 少し大きする
res_wt_naomit_annot_sort_20 

#Gene name だけ抽出
gene_name20 <- res_wt_naomit_annot_sort_20$ext_gene
gene_name20　#20個あるか確認

rownames(mat) <- gene_name20 # mat rowname 変更　gene_name にする

rownames(df) <- colnames(mat) #rownames(data)  # data行の名前colnames(data2) data2の列の名前
pheatmap(mat, show_colnames = F, annotation_col=df)

         
